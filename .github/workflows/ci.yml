# This workflow will do a clean install of node dependencies, test & lint the code and will create a
# semantic release for every merge to main.

name: Continuous Integration

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    types: [opened, ready_for_review, synchronize]

jobs:
  tests:
    runs-on: ubuntu-latest
    if: |
        !contains(github.event.head_commit.message, '[SKIP TESTS]') &&
        github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn validate

  semantic_commits:
    runs-on: ubuntu-latest
    if: |
        !contains(github.event.head_commit.message, '[SKIP TESTS]') &&
        github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Run commitlint
        uses: wagoid/commitlint-github-action@v4

  semantic_release:
    runs-on: ubuntu-latest
    needs: [tests]
    if: |
        github.ref == 'refs/heads/main' &&
        !contains(github.event.head_commit.message, '[SKIP TESTS]') &&
        github.event.pull_request.draft == false
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - uses: actions/cache@v3
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}
      - run: yarn install
      - run: yarn build
      - name: Semantic release
        run: yarn semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
