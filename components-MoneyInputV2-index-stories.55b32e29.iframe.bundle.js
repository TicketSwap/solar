"use strict";(self.webpackChunk_ticketswap_solar=self.webpackChunk_ticketswap_solar||[]).push([[6627],{"./src/components/MoneyInputV2/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Basic:()=>Basic,Disabled:()=>Disabled,WithLegend:()=>WithLegend,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var react=__webpack_require__("./node_modules/react/index.js"),Instruction=__webpack_require__("./src/components/Instruction/Instruction.tsx"),emotion_styled_base_browser_esm=__webpack_require__("./node_modules/@emotion/styled/base/dist/emotion-styled-base.browser.esm.js"),InputWithLabel=__webpack_require__("./src/components/InputV2/InputWithLabel.tsx"),SelectWithLabel=__webpack_require__("./src/components/SelectV2/SelectWithLabel.tsx"),theme=__webpack_require__("./src/theme/index.ts"),jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js");const Legend=(0,emotion_styled_base_browser_esm.Z)("legend",{target:"eozrkfz2"})("margin-block-end:",theme.Dh[4],";"),Fieldset=(0,emotion_styled_base_browser_esm.Z)("div",{target:"eozrkfz1"})("display:grid;grid-gap:",theme.Dh[4],";"),InputFields=(0,emotion_styled_base_browser_esm.Z)("div",{target:"eozrkfz0"})("display:grid;grid-template-columns:auto 1fr;column-gap:",theme.Dh[8],";input[type='number']::-webkit-outer-spin-button,input[type='number']::-webkit-inner-spin-button{appearance:none;}input[type='number']{appearance:none;}"),MoneyInput=({currencyProps,amountProps,legend,instruction})=>(0,jsx_runtime.jsxs)(Fieldset,{role:"group",children:[legend&&(0,jsx_runtime.jsx)(Legend,{children:legend}),(0,jsx_runtime.jsxs)(InputFields,{children:[(0,jsx_runtime.jsx)(SelectWithLabel.S,{...currencyProps,variant:"short"}),(0,jsx_runtime.jsx)(InputWithLabel.s,{...amountProps,type:"number"})]}),instruction]});MoneyInput.displayName="MoneyInput";const currencies=[{value:"EUR",label:"Euro",startAdornment:"€"},{value:"DKK",label:"Danish Krone",startAdornment:"DKK"},{value:"GBP",label:"British Pound",startAdornment:"£"},{value:"HUF",label:"Hungarian Forint",startAdornment:"HUF"},{value:"PLN",label:"Polish Zloty",startAdornment:"PLN"},{value:"SEK",label:"Swedish Krona",startAdornment:"SEK"},{value:"USD",label:"US Dollar",startAdornment:"$"},{value:"CAD",label:"Canadian Dollar",startAdornment:"CA$"},{value:"AUD",label:"Australian Dollar",startAdornment:"A$"},{value:"NZD",label:"New Zealand Dollar",startAdornment:"NZ$"},{value:"CHF",label:"Swiss Franc",startAdornment:"CHF"},{value:"NOK",label:"Norwegian Krone",startAdornment:"NOK"}],index_stories={title:"Components/Inputs/MoneyInputV2"},Basic=()=>{const[money,setMoney]=(0,react.useState)({currency:"HUF",amount:""});return(0,jsx_runtime.jsx)(MoneyInput,{currencyProps:{id:"currency",options:currencies,"aria-label":"Currency",onChange:event=>setMoney((previousMoney=>({...previousMoney,currency:event.target.value}))),value:money.currency},instruction:(0,jsx_runtime.jsx)(Instruction.v,{children:"Lorem ipsum dolor sit amet consectetur adipisicing."}),amountProps:{id:"amount","aria-label":"Amount",onChange:event=>setMoney((previousMoney=>({...previousMoney,amount:event.target.value}))),value:money.amount}})};Basic.displayName="Basic";const Disabled=()=>(0,jsx_runtime.jsx)(MoneyInput,{legend:"Selling price",currencyProps:{id:"currency","aria-label":"Currency",onChange:console.log,options:currencies,disabled:!0},amountProps:{id:"amount","aria-label":"Amount",onChange:console.log,disabled:!0,value:"12.30"}});Disabled.displayName="Disabled";const WithLegend=()=>{const[money,setMoney]=(0,react.useState)({currency:"HUF",amount:""});return(0,jsx_runtime.jsx)(MoneyInput,{legend:"Selling price for all of your amazing tickets",instruction:(0,jsx_runtime.jsx)(Instruction.v,{children:"Lorem ipsum dolor sit amet consectetur adipisicing."}),currencyProps:{id:"currency",options:currencies,"aria-label":"Currency",onChange:event=>setMoney((previousMoney=>({...previousMoney,currency:event.target.value}))),value:money.currency},amountProps:{id:"amount","aria-label":"Amount",onChange:event=>setMoney((previousMoney=>({...previousMoney,amount:event.target.value}))),value:money.amount}})};WithLegend.displayName="WithLegend",Basic.parameters={...Basic.parameters,docs:{...Basic.parameters?.docs,source:{originalSource:"() => {\n  const [money, setMoney] = useState({\n    currency: 'HUF',\n    amount: ''\n  });\n  return <MoneyInput currencyProps={{\n    id: 'currency',\n    options: currencies,\n    'aria-label': 'Currency',\n    onChange: event => setMoney(previousMoney => {\n      return {\n        ...previousMoney,\n        currency: event.target.value\n      };\n    }),\n    value: money.currency\n  }} instruction={<Instruction>\n          Lorem ipsum dolor sit amet consectetur adipisicing.\n        </Instruction>} amountProps={{\n    id: 'amount',\n    'aria-label': 'Amount',\n    onChange: event => setMoney(previousMoney => {\n      return {\n        ...previousMoney,\n        amount: event.target.value\n      };\n    }),\n    value: money.amount\n  }} />;\n}",...Basic.parameters?.docs?.source}}},Disabled.parameters={...Disabled.parameters,docs:{...Disabled.parameters?.docs,source:{originalSource:"() => {\n  return <MoneyInput legend=\"Selling price\" currencyProps={{\n    id: 'currency',\n    'aria-label': 'Currency',\n    onChange: console.log,\n    options: currencies,\n    disabled: true\n  }} amountProps={{\n    id: 'amount',\n    'aria-label': 'Amount',\n    onChange: console.log,\n    disabled: true,\n    value: '12.30'\n  }} />;\n}",...Disabled.parameters?.docs?.source}}},WithLegend.parameters={...WithLegend.parameters,docs:{...WithLegend.parameters?.docs,source:{originalSource:"() => {\n  const [money, setMoney] = useState({\n    currency: 'HUF',\n    amount: ''\n  });\n  return <MoneyInput legend=\"Selling price for all of your amazing tickets\" instruction={<Instruction>\n          Lorem ipsum dolor sit amet consectetur adipisicing.\n        </Instruction>} currencyProps={{\n    id: 'currency',\n    options: currencies,\n    'aria-label': 'Currency',\n    onChange: event => setMoney(previousMoney => {\n      return {\n        ...previousMoney,\n        currency: event.target.value\n      };\n    }),\n    value: money.currency\n  }} amountProps={{\n    id: 'amount',\n    'aria-label': 'Amount',\n    onChange: event => setMoney(previousMoney => {\n      return {\n        ...previousMoney,\n        amount: event.target.value\n      };\n    }),\n    value: money.amount\n  }} />;\n}",...WithLegend.parameters?.docs?.source}}};const __namedExportsOrder=["Basic","Disabled","WithLegend"]}}]);